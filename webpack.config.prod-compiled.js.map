{"version":3,"sources":["webpack.config.prod.js"],"names":[],"mappings":"aAAA,IAAI,KAAO,QAAQ,MAAR,CAAX,CACA,IAAI,QAAU,QAAQ,SAAR,CAAd,CACA,IAAI,eAAiB,QAAQ,yBAAR,CAArB,CACA,IAAI,kBAAoB,QAAQ,6BAAR,CAAxB,CACA,IAAI,kBAAoB,QAAQ,qBAAR,CAAxB,CAEA,OAAO,OAAP,CAAiB,CACf,MAAO,gBADQ,CAEf,OAAQ,CACN,KAAM,KAAK,IAAL,CAAU,SAAV,CAAqB,MAArB,CADA,CAEN,SAAU,uBAFJ,CAFO,CAMf,QAAS,CACP,IAAI,iBAAJ,CAAsB,mBAAtB,CADO,CAEP,IAAI,QAAQ,YAAZ,CAAyB,CACvB,cAAe,CACb,WAAY,KAAK,SAAL,CAAe,YAAf,CADC,CADQ,CAAzB,CAFO,CAOP,IAAI,QAAQ,QAAR,CAAiB,cAArB,CAAoC,CAClC,SAAU,CACR,SAAU,KADF,CADwB,CAApC,CAPO,CAYP,IAAI,QAAQ,QAAR,CAAiB,oBAArB,EAZO,CAaP,IAAI,QAAQ,QAAR,CAAiB,YAArB,EAbO,CAcP,IAAI,iBAAJ,CAAsB,CACpB,SAAU,oBADU,CAEpB,OAAQ,MAFY,CAAtB,CAdO,CANM,CAyBf,OAAQ,CACN,QAAS,CAAC,CACR,KAAM,OADE,CAER,QAAS,CAAC,OAAD,CAFD,CAGR,QAAS,KAAK,IAAL,CAAU,SAAV,CAAqB,KAArB,CAHD,CAAD,CAIN,CACD,KAAM,QADL,CAED,OAAQ,kBAAkB,OAAlB,CACN,cADM,CAEN,eAAe,CAAC,CACd,OAAQ,YADM,CAEd,MAAO,CACL,QAAS,IADJ,CAEL,eAAgB,mCAFX,CAFO,CAAD,CAAf,CAFM,CAFP,CAJM,CADH,CAzBO,CAAjB","file":"webpack.config.prod-compiled.js","sourcesContent":["var path = require('path');\r\nvar webpack = require('webpack');\r\nvar combineLoaders = require('webpack-combine-loaders');\r\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\r\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\r\n\r\nmodule.exports = {\r\n  entry: './src/index.js',\r\n  output: {\r\n    path: path.join(__dirname, 'dist'),\r\n    filename: 'javascripts-[hash].js'\r\n  },\r\n  plugins: [\r\n    new ExtractTextPlugin('styles-[hash].css'),\r\n    new webpack.DefinePlugin({\r\n      'process.env': {\r\n        'NODE_ENV': JSON.stringify('production')\r\n      }\r\n    }),\r\n    new webpack.optimize.UglifyJsPlugin({\r\n      compress: {\r\n        warnings: false\r\n      }\r\n    }),\r\n    new webpack.optimize.OccurenceOrderPlugin(),\r\n    new webpack.optimize.DedupePlugin(),\r\n    new HtmlWebpackPlugin({\r\n      template: 'index.template.ejs',\r\n      inject: 'body',\r\n    })\r\n  ],\r\n  module: {\r\n    loaders: [{\r\n      test: /\\.js$/,\r\n      loaders: ['babel'],\r\n      include: path.join(__dirname, 'src')\r\n    }, {\r\n      test: /\\.css$/,\r\n      loader: ExtractTextPlugin.extract(\r\n        'style-loader',\r\n        combineLoaders([{\r\n          loader: 'css-loader',\r\n          query: {\r\n            modules: true,\r\n            localIdentName: '[name]__[local]___[hash:base64:5]'\r\n          }\r\n        }])\r\n      )\r\n    }]\r\n  }\r\n};\r\n"]}